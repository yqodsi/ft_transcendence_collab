version: "3.3"

services:

      #----------client---------##
  client:
    container_name: client
    ports:
      - 3000:3000
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - api
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    networks:
      - nesjs-network
    restart: unless-stopped
      ##----------api---------##
  api:
    environment:
      - DATABASE_URL=postgresql://postgres:123@postgres_db:5432/nest?schema=public
      - PASSPORT_ID=12c636150a0997b590326ef402a48eebb7df63009143d46579589ec5025ac841
      - PASSPORT_SECRET=0296ce9db1cface9d4825ed3173d391fcba46bf40733231cde4b004e440faaa5
      - PASSPORT_REDIRECT_URL=http://localhost:3333/api/auth/redirect
      - PORT=3333
      - JWT_SECRET=secret
      - JWT_EXPIRATION_TIME=120s
      - JWT_RT_SECRET=rt_secret
      - CLIENT_URL=http://localhost:3000
    container_name: api
    ports:
      - 3333:3333
    build:
      context: ./api
      dockerfile: Dockerfile
    entrypoint: ["npm", "run", "start:dev"]
   
    depends_on:
      - dev-db
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    restart: always
    networks:
      - nesjs-network

      ##----------database---------##

  dev-db:
    container_name: postgres_db
    image: postgres:14.0
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=nest
    ports:
      - "5432:5432"
    restart: always
    networks:
      - nesjs-network

networks:
  nesjs-network:
      

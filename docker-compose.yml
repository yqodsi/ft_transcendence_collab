version: "3.3"

services:

      #----------client---------##
  client:
    container_name: client
    build:
      dockerfile: client-dockerfile
      context: .
    depends_on:
      - api
    volumes:
      - ./client:/usr/src/app
    ports:
      - "3000:3000"
    networks:
      - nesjs-network
    restart: unless-stopped

  api:
    container_name: api
    build:
      dockerfile: api-dockerfile
      context: .
    depends_on:
      - dev-db
    environment:
      - DATABASE_URL=postgresql://postgres:123@postgres_db:5432/nest?schema=public
      - PASSPORT_ID=12c636150a0997b590326ef402a48eebb7df63009143d46579589ec5025ac841
      - PASSPORT_SECRET=390485ef1b82007be14780fba7a3b0dfe6b86f01d13017796201c351a9eea8a0
      - PASSPORT_REDIRECT_URL=http://localhost:3333/api/auth/redirect
      - PORT=3333
      - JWT_SECRET=secret
      - JWT_EXPIRATION_TIME=120s
      - JWT_RT_SECRET=rt_secret
      - CLIENT_URL=http://localhost:3000
    volumes:
      - ./api:/usr/src/app
    ports:
      - "3333:3333"
      - "5555:5555"
    networks:
      - nesjs-network
    restart: unless-stopped
  

      ##----------database---------##

  dev-db:
    container_name: postgres_db
    image: postgres:14.0
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=nest
    ports:
      - "5432:5432"
    restart: always
    networks:
      - nesjs-network

networks:
  nesjs-network:
      
